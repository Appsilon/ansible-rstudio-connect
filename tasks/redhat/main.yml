---
# 4) Install dependencies
- name: Remove curl-minimal if present
  ansible.builtin.dnf:
    name: curl-minimal
    state: absent

- name: Install | dependencies
  ansible.builtin.dnf:
    name: "{{ rstudio_connect_dependencies }}"
    state: "{{ package_install_state | default('latest') }}"
    update_cache: true
  tags:
    - rstudio-connect-install-dependencies

# 5) Install additional packages
- name: Install | additional
  ansible.builtin.dnf:
    name: "{{ rstudio_connect_install }}"
    state: "{{ package_install_state | default('latest') }}"
  tags:
    - rstudio-connect-install-additional

# 6) Create (download) directory
- name: Install | create (download) directory
  ansible.builtin.file:
    path: "{{ rstudio_connect_downloads_path }}"
    state: directory
    owner: root
    group: root
    mode: '0755'
  tags:
    - rstudio-connect-install-download
    - rstudio-connect-install-download-directory

# 7) Download RStudio Connect RPM (parametric)
- name: Install | download rpm
  ansible.builtin.get_url:
    url: "{{ rstudio_connect_download_url }}"
    dest: "{{ rstudio_connect_downloads_path }}/rstudio-connect-{{ rstudio_connect_version }}.rpm"
    mode: '0644'
  tags:
    - rstudio-connect-install-download

# 8) Install RStudio Connect RPM (parametric)
- name: Install | install rpm
  ansible.builtin.dnf:
    name: "{{ rstudio_connect_downloads_path }}/rstudio-connect-{{ rstudio_connect_version }}.rpm"
    disable_gpg_check: true
    state: present
  tags:
    - rstudio-connect-install-install
    - rstudio-connect-install-install-rpm
  notify: Restart rstudio-connect
# Verify if RStudio Connect RPM is installed
- name: Check if RStudio Connect RPM is installed
  ansible.builtin.dnf:
    name: rstudio-connect
    state: present
  register: rpm_check
  changed_when: false

- name: Debug RPM Installation Result
  ansible.builtin.debug:
    var: rpm_check

# Check if systemd service file exists
- name: Check for RStudio Connect systemd service file
  ansible.builtin.stat:
    path: /etc/systemd/system/rstudio-connect.service
  register: service_file_check

- name: Debug Service File Existence
  ansible.builtin.debug:
    var: service_file_check.stat.exists

# Check if systemd is running
- name: Check if systemd is running
  ansible.builtin.stat:
    path: /run/systemd/system
  register: systemd_status
  changed_when: false

- name: Debug Init System
  ansible.builtin.debug:
    var: systemd_status.stat.exists

# Start Connect manually if systemd is missing
- name: Manually start RStudio Connect if systemd is not present
  ansible.builtin.shell: "/opt/rstudio-connect/bin/rstudio-connect --config /etc/rstudio-connect/rstudio-connect.gcfg &"
  when: not systemd_status.stat.exists
  changed_when: false
  failed_when: false

# Enable and start service if systemd is present
- name: Enable and start RStudio Connect service
  ansible.builtin.systemd:
    name: rstudio-connect
    enabled: true
    state: started
  when: systemd_status.stat.exists

# Fallback: Check Direct RStudio Connect Logs
- name: Check direct RStudio Connect log file
  ansible.builtin.stat:
    path: /var/log/rstudio-connect.log
  register: log_file

- name: Debug RStudio Connect Logs
  ansible.builtin.slurp:
    src: /var/log/rstudio-connect.log
  when: log_file.stat.exists
  register: rstudio_log

- name: Show Logs if Available
  ansible.builtin.debug:
    msg: "{{ rstudio_log['content'] | b64decode }}"
  when: log_file.stat.exists
